Globals:
  do_not_touch = global int

Function: main
block 0
  var return_value: int = None
  var temp1: bool = Some(Bool(true))
  var temp2: bool = Some(Bool(true))
  if temp2 -> block 2 else block 3

block 1
  -> return

block 2
  free(temp2)
  free(temp1)
  var temp7: bool = Some(Bool(true))
  var temp8: bool = Some(Bool(false))
  if temp8 -> block 4 else block 5

block 3
  var temp3: bool = None
  var temp4: int = None
  var temp5: int = None
  var temp6: bool = None
  temp6 = call increment()
  temp1 = temp6
  free(temp6)
  free(temp5)
  free(temp4)
  free(temp3)
  -> block 2

block 4
  free(temp8)
  free(temp7)
  var temp13: bool = Some(Bool(false))
  var temp14: bool = Some(Bool(false))
  if temp14 -> block 7 else block 6

block 5
  var temp9: bool = None
  var temp10: int = None
  var temp11: int = None
  var temp12: bool = None
  temp12 = call increment()
  temp7 = temp12
  free(temp12)
  free(temp11)
  free(temp10)
  free(temp9)
  -> block 4

block 6
  free(temp14)
  free(temp13)
  var temp19: bool = Some(Bool(false))
  var temp20: bool = Some(Bool(true))
  if temp20 -> block 9 else block 8

block 7
  var temp15: bool = None
  var temp16: int = None
  var temp17: int = None
  var temp18: bool = None
  temp18 = call increment()
  temp13 = temp18
  free(temp18)
  free(temp17)
  free(temp16)
  free(temp15)
  -> block 6

block 8
  free(temp20)
  free(temp19)
  return_value = do_not_touch
  free(return_value)
  -> block 1

block 9
  var temp21: bool = None
  var temp22: int = None
  var temp23: int = None
  var temp24: bool = None
  temp24 = call increment()
  temp19 = temp24
  free(temp24)
  free(temp23)
  free(temp22)
  free(temp21)
  -> block 8

Function: increment
block 0
  var return_value: bool = None
  var temp1: int = Some(Int(1))
  var temp2: int = None
  do_not_touch = do_not_touch + temp1
  free(temp1)
  free(temp2)
  var temp3: void = None
  free(temp3)
  var temp4: bool = Some(Bool(true))
  return_value = temp4
  free(temp4)
  free(return_value)
  -> block 1

block 1
  -> return

