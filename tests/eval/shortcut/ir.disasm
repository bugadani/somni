Globals:
  do_not_touch = global int

Functions:
Function: main
block 0
  var return_value: int = None
  var temp1: bool = Some(Bool(true))
  var temp2: bool = Some(Bool(true))
  if temp2 -> block 2 else block 3

block 1
  -> return

block 2
  free(temp2)
  free(temp1)
  var temp5: bool = Some(Bool(true))
  var temp6: bool = Some(Bool(false))
  if temp6 -> block 4 else block 5

block 3
  var temp3: void = None
  var temp4: void = None
  temp4 = call increment()
  temp3 = temp4
  free(temp4)
  temp1 = temp3
  free(temp3)
  -> block 2

block 4
  free(temp6)
  free(temp5)
  var temp9: bool = Some(Bool(false))
  var temp10: bool = Some(Bool(false))
  if temp10 -> block 7 else block 6

block 5
  var temp7: void = None
  var temp8: void = None
  temp8 = call increment()
  temp7 = temp8
  free(temp8)
  temp5 = temp7
  free(temp7)
  -> block 4

block 6
  free(temp10)
  free(temp9)
  var temp13: bool = Some(Bool(false))
  var temp14: bool = Some(Bool(true))
  if temp14 -> block 9 else block 8

block 7
  var temp11: void = None
  var temp12: void = None
  temp12 = call increment()
  temp11 = temp12
  free(temp12)
  temp9 = temp11
  free(temp11)
  -> block 6

block 8
  free(temp14)
  free(temp13)
  return_value = do_not_touch
  free(return_value)
  -> block 10

block 9
  var temp15: void = None
  var temp16: void = None
  temp16 = call increment()
  temp15 = temp16
  free(temp16)
  temp13 = temp15
  free(temp15)
  -> block 8

block 10
  -> block 1

block 11
  -> block 1
Function: increment
block 0
  var return_value: bool = None
  var temp1: int = Some(Int(1))
  var temp2: void = None
  temp2 = do_not_touch + temp1
  free(temp1)
  do_not_touch = temp2
  free(temp2)
  var temp3: void = None
  free(temp3)
  var temp4: bool = Some(Bool(true))
  return_value = temp4
  free(temp4)
  free(return_value)
  -> block 2

block 1
  -> return

block 2
  -> block 1

block 3
  -> block 1
