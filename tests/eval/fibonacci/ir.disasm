Globals:

Functions:
Function: fib
block 0
  var return_value: Some(Int) = None
  var n: Some(Int) = None
  var temp2: None = Some(Int(1))
  var temp3: None = None
  temp3 = n <= temp2
  free(temp2)
  if temp3 -> block 3 else block 2

block 1
  -> return

block 2
  var temp4: None = Some(Int(1))
  var temp5: None = None
  temp5 = n - temp4
  free(temp4)
  var temp6: None = None
  temp6 = call fib(temp5)
  var temp7: None = Some(Int(2))
  var temp8: None = None
  temp8 = n - temp7
  free(temp7)
  var temp9: None = None
  temp9 = call fib(temp8)
  var temp10: None = None
  temp10 = temp6 + temp9
  free(temp6)
  free(temp9)
  return_value = temp10
  free(temp10)
  free(temp8)
  free(temp5)
  free(temp3)
  free(n)
  free(return_value)
  -> block 6

block 3
  return_value = n
  free(temp3)
  free(n)
  free(return_value)
  -> block 4

block 4
  -> block 1

block 5
  -> block 2

block 6
  -> block 1

block 7
  -> block 1
Function: main
block 0
  var return_value: Some(Bool) = None
  var temp1: None = Some(Int(20))
  var temp2: None = None
  temp2 = call fib(temp1)
  var temp3: None = Some(Int(6765))
  var temp4: None = None
  temp4 = temp2 == temp3
  free(temp2)
  free(temp3)
  var temp5: None = None
  temp5 = call assert(temp4)
  return_value = temp5
  free(temp5)
  free(temp4)
  free(temp1)
  free(return_value)
  -> block 2

block 1
  -> return

block 2
  -> block 1

block 3
  -> block 1
