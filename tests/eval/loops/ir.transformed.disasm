Globals:

Functions:
Function: loopy
block 0
  var return_value: Int = None
  var n: Int = None
  var temp2: Int = Some(Int(7))
  n = temp2
  free(temp2)
  -> block 3

block 1
  -> return

block 2
  var temp10: Int = Some(Int(0))
  var temp11: Bool = None
  temp11 = n > temp10
  free(temp10)
  if temp11 -> block 10 else block 9

block 3
  var temp3: Int = Some(Int(4))
  var temp4: Bool = None
  temp4 = n > temp3
  free(temp3)
  if temp4 -> block 5 else block 8

block 4
  free(temp4)
  -> block 3

block 5
  var temp5: Int = Some(Int(6))
  var temp6: Bool = None
  temp6 = n == temp5
  free(temp5)
  if temp6 -> block 7 else block 6

block 6
  free(temp6)
  var temp7: Int = Some(Int(1))
  var temp8: Int = None
  temp8 = n - temp7
  free(temp7)
  n = temp8
  free(temp8)
  var temp9: Void = None
  free(temp9)
  -> block 4

block 7
  free(temp6)
  free(temp4)
  -> block 2

block 8
  free(temp4)
  -> block 2

block 9
  free(temp11)
  return_value = n
  free(n)
  free(return_value)
  -> block 1

block 10
  var temp12: Int = Some(Int(1))
  var temp13: Int = None
  temp13 = n - temp12
  free(temp12)
  n = temp13
  free(temp13)
  var temp14: Void = None
  free(temp14)
  free(temp11)
  -> block 3
