Globals:
  n = global int
  m = global int
  p = global int

Function: add_as_signed
block 0
  var return_value: int = None
  var a: int = None
  var b: int = None
  return_value = a + b
  free(b)
  free(a)
  free(return_value)
  -> block 1

block 1
  -> return

Function: double
block 0
  var return_value: void = None
  var temp2: int = Some(MaybeSignedInt(2))
  n = n * temp2
  free(temp2)
  free(return_value)
  -> block 1

block 1
  -> return

Function: doubled
block 0
  var return_value: int = None
  var temp3: int = None
  var temp4: int = None
  var temp5: void = None
  temp5 = call double()
  free(temp5)
  free(temp4)
  free(temp3)
  return_value = n + m
  free(return_value)
  -> block 1

block 1
  -> return

