Globals:
  n = global int
  m = global int
  p = global int

Function: add_as_signed
block 0
  var return_value: int = None
  var a: int = None
  var b: int = None
  var temp3: void = None
  var temp4: void = None
  temp4 = a + b
  return_value = temp4
  free(temp4)
  free(temp3)
  free(b)
  free(a)
  free(return_value)
  -> block 2

block 1
  -> return

block 2
  -> block 1

block 3
  free(b)
  free(a)
  free(return_value)
  -> block 1

Function: double
block 0
  var return_value: void = None
  var temp1: void = None
  var temp2: {int/signed} = Some(MaybeSignedInt(2))
  var temp3: void = None
  temp3 = n * temp2
  free(temp2)
  n = temp3
  free(temp3)
  var temp4: void = None
  free(temp4)
  free(temp1)
  free(return_value)
  -> block 1

block 1
  -> return

Function: doubled
block 0
  var return_value: int = None
  var temp1: void = None
  var temp2: void = None
  var temp3: int = None
  var temp4: int = None
  var temp5: void = None
  temp5 = call double()
  temp2 = temp5
  free(temp5)
  free(temp4)
  free(temp3)
  free(temp2)
  var temp6: void = None
  temp6 = n + m
  return_value = temp6
  free(temp6)
  free(temp1)
  free(return_value)
  -> block 2

block 1
  -> return

block 2
  -> block 1

block 3
  free(return_value)
  -> block 1

