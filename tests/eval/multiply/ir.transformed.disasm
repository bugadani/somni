Globals:

Function: noop
block 0
  var return_value: void = None
  free(return_value)
  -> block 1

block 1
  -> return

Function: multiply
block 0
  var return_value: int = None
  var number: int = None
  var n: int = None
  var add: bool = None
  if add -> block 2 else block 8

block 1
  -> return

block 2
  var acc: int = None
  var temp5: int = Some(Int(0))
  acc = temp5
  free(temp5)
  -> block 4

block 3
  return_value = acc
  free(acc)
  free(add)
  free(n)
  free(number)
  free(return_value)
  -> block 1

block 4
  var temp6: int = Some(Int(0))
  var temp7: bool = None
  temp7 = n > temp6
  free(temp6)
  if temp7 -> block 6 else block 7

block 5
  free(temp7)
  -> block 4

block 6
  acc = acc + number
  var temp10: int = Some(Int(1))
  n = n - temp10
  free(temp10)
  -> block 5

block 7
  free(temp7)
  -> block 3

block 8
  var temp14: int = None
  var temp15: int = None
  var temp16: void = None
  temp16 = call noop()
  free(temp16)
  free(temp15)
  free(temp14)
  return_value = number * n
  free(add)
  free(n)
  free(number)
  free(return_value)
  -> block 1

