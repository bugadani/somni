Function: noop() -> void
  Code:
    0: push Int(2)
    1: push Address(Local(VariableIndex(0)))
    2: store
    3: push Int(0)
    4: return
Function: multiply(int, int, bool) -> int
  Code:
    0:  push Address(Local(VariableIndex(2)))
    1:  load
    2:  jump_forward_if 33 false
    3:  push Int(0)
    4:  push Address(Local(VariableIndex(3)))
    5:  store
    6:  loop_start 26
    7:  push Int(0)
    8:  push Address(Local(VariableIndex(1)))
    9:  load
    10: less than
    11: jump_forward_if 18 false
    12: push Address(Local(VariableIndex(3)))
    13: load
    14: push Address(Local(VariableIndex(0)))
    15: load
    16: add
    17: push Address(Local(VariableIndex(3)))
    18: store
    19: push Void
    20: pop
    21: push Address(Local(VariableIndex(1)))
    22: load
    23: push Int(1)
    24: subtract
    25: push Address(Local(VariableIndex(1)))
    26: store
    27: push Void
    28: pop
    29: jump_forward 1
    30: break
    31: continue
    32: push Address(Local(VariableIndex(3)))
    33: load
    34: return
    35: jump_forward 8
    36: call noop() -> void
    37: pop
    38: push Address(Local(VariableIndex(0)))
    39: load
    40: push Address(Local(VariableIndex(1)))
    41: load
    42: multiply
    43: return
Function: main() -> bool
  Code:
    0:  push Int(10)
    1:  push Int(5)
    2:  push Bool(false)
    3:  call multiply(int, int, bool) -> int
    4:  push Int(10)
    5:  push Int(5)
    6:  push Bool(true)
    7:  call multiply(int, int, bool) -> int
    8:  equals
    9:  call_named external assert
    10: return
