Function noop(...) -> void (stack: 4)
  0000: load Local(2) = Int(2)
  0001: copy Local(1) = Local(2)
  0002: load Local(3) = Int(0)
  0003: copy Local(0) = Local(3)
  0004: return
Function multiply(...) -> int (stack: 10)
  0005: if Local(3) == false jump to 19
  0006: load Local(5) = Int(0)
  0007: copy Local(4) = Local(5)
  0008: load Local(6) = Int(0)
  0009: Local(7) = Local(6) < Local(2)
  0010: if Local(7) == false jump to 17
  0011: Local(6) = Local(4) + Local(1)
  0012: copy Local(4) = Local(6)
  0013: load Local(8) = Int(1)
  0014: Local(9) = Local(2) - Local(8)
  0015: copy Local(2) = Local(9)
  0016: jump to 8
  0017: copy Local(0) = Local(4)
  0018: return
  0019: call noop(..) with sp=Local(5)
  0020: copy Local(4) = Local(5)
  0021: Local(5) = Local(1) * Local(2)
  0022: copy Local(0) = Local(5)
  0023: jump to 18
Function main(...) -> bool (stack: 13)
  0024: load Local(1) = Int(10)
  0025: load Local(2) = Int(5)
  0026: load Local(3) = Bool(false)
  0027: copy Local(6) = Local(1)
  0028: copy Local(7) = Local(2)
  0029: copy Local(8) = Local(3)
  0030: call multiply(..) with sp=Local(5)
  0031: copy Local(4) = Local(5)
  0032: load Local(5) = Int(10)
  0033: load Local(6) = Int(5)
  0034: load Local(7) = Bool(true)
  0035: copy Local(10) = Local(5)
  0036: copy Local(11) = Local(6)
  0037: copy Local(12) = Local(7)
  0038: call multiply(..) with sp=Local(9)
  0039: copy Local(8) = Local(9)
  0040: Local(9) = Local(4) == Local(8)
  0041: copy Local(11) = Local(9)
  0042: call assert(arg0) with sp=Local(10)
  0043: copy Local(4) = Local(10)
  0044: copy Local(0) = Local(4)
  0045: return
